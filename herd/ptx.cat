"GPU_PTX"

(* Uniproc check *)
(* Allows ll hazard, as does the hardware (intentially? Vinod said it is not intential!) *)
let com = rf | fr | co
let po_llh = (WM(po-loc) | MW(po-loc))
acyclic po_llh | com as uniproc_llh

let dep = addr | data
acyclic dep | rf as thin

let ppo = dep

let sys_fence = membar.sys
let gl_fence  = membar.gl  | sys_fence
let cta_fence = membar.cta | gl_fence

(*Should to be able to say 'acyclic' in functions*)
let scope(r,s) = (r & s)

(*scope/fence parameterized rmo*)
let rmo(s,fence) = scope((ppo | fence | rf | co | fr), s)

let cta_constraint = rmo(int-cta, cta_fence)
let gl_constraint = rmo(int-dev, gl_fence)
let sys_constraint = rmo(unv, sys_fence)

acyclic cta_constraint
acyclic gl_constraint
acyclic sys_constraint

show cta_constraint
