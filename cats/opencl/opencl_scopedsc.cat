"OpenCL" withoutsc
  
include "opencl_base.cat"
	  
(****************************************)
(* Sequential consistency, simplified,  *)
(* with scoped SC axioms                *)
(****************************************)

let scp = Fsb?; (rb | mo | (ghb | lhb)); sbF?
	       	
acyclic (mo_sc^2) & scp & incl as O-Sscoped
									 show scp & incl as scp

								       
(*********)
(* Races *)
(*********)

let cnf = ((W * W) | (W * R) | (R * W)) & loc

(* Data races *)
let dr = cnf & ~(ghb | lhb)
	 & ~(ghb | lhb)^-1 & ~wi & ~incl
undefined_unless empty dr as O-Dr
show dr

(* Barrier divergence *)
let bsw = bar_sw(G) | bar_sw(L)
let bd = [entry_fence]
	 & ((~wi & wg); unv) \ (bsw ; unv)
undefined_unless empty bd as O-Bd
show bd
